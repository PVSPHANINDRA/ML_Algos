# -*- coding: utf-8 -*-
"""Drug_NN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JMoPRUVVRbFRZBGfxw77bqqXNb0F8M-9
"""

import pandas as pd
from sklearn.utils import shuffle
from sklearn.model_selection import train_test_split
import numpy as np
import math
from sklearn.preprocessing import OneHotEncoder

from google.colab import files
upload = files.upload()

df = pd.read_csv('drug200.csv', header = None)
dataset = df
#df = df.rename(columns= {'# class':'class'})

df[5].unique()

df.dropna(inplace=True)

from sys import argv as args
import pandas as pd
import numpy as np
from decisionTree import execute as dt_execute
#from nn import execute as nn_execute
from randomForest import execute as rf_execute

#csv_contents = pd.read_csv('crx.data', header = None)
instances = df.values
# removing the headers
instances = instances[1:]
class_index = 5
num_attr = [0,4]
print(instances[0])
print('instances count: ', len(instances))

# if len(args) != 2:
#     print('Please file path for dataset and pass criterion : gini or ig')
# else:
#     criterion = args[1]
#     if criterion != 'gini' and criterion != 'ig':
#         print('Please pass criterion : gini or ig')
#     execute('Contraceptive', instances, class_index, num_attr, criterion)


rf_execute('crx', instances, class_index, num_attr, 'ig')
#dt_execute('Loan', instances, class_index, num_attr, 'ig')


#hidden_layer = [32]
#_lambda = 0.01
#alpha = 0.4
#max_itr = 200

# instances - 480
#acc, f1_score, reg_costs, err_costs, itr = nn_execute("Loan", instances, class_index, num_attr, hidden_layer,
 #                                                     _lambda, alpha, max_itr, min_grad_diff=0.000001,
  #                                                    mini_batch=len(instances) / 2)

from sklearn import datasets
from sys import argv as args
#from randomForest import execute as rf_execute
#from decisionTree import execute as dt_execute
from nn import execute as nn_execute, plot_J


instances = df.values
# removing the headers
instances = instances[1:]
class_index = 5
num_attr = [0,4]



print(instances[0])
print('instances count: ', len(instances))

# if len(args) != 2:
#     print('Please file path for dataset and pass criterion : gini or ig')
# else:
#     criterion = args[1]
#     if criterion != 'gini' and criterion != 'ig':
#         print('Please pass criterion : gini or ig')
# rf_execute('handwritten words', instances, class_index, num_attr, 'ig')
dt_execute('handwritten words', instances, class_index, num_attr, 'ig')


hidden_layer = [6]
_lambda = 0
alpha = 0.9
max_itr = 600

# instances - 1797
#acc, f1_score, reg_costs, err_costs, itr = nn_execute("Handwritten words", instances, class_index, num_attr, hidden_layer,
                                                    #  _lambda, alpha, max_itr)
# print(acc)
# print(err_costs)

plot_J(instances, class_index, num_attr,hidden_layer,_lambda, alpha, max_itr)